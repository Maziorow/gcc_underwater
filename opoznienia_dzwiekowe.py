# -*- coding: utf-8 -*-
"""opoznienia_dzwiekowe.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1EZ2Tu7xbJZBqh_e-LgnsunqAICOaDjJq
"""

import numpy as np
from scipy.io.wavfile import write
from IPython.display import Audio, display

v = 1481 #(m/s)

a,b,c = 0, 0, 0 #polozenie glosnika

x,y,z = 4, 6, 10 #polozenie hydrofonow
h = 0.5  # odleglosc miedzy hydrofonami

hydro1 = (x,y,z)
hydro2 = (x, y - h, z)
hydro3 = (x, y, z - h)

czas = 10  # czas sygnalu
probka = 192000 # Sampling rate
probki = int(czas * probka)

n_impuls = 5               # ile impulsow
odstep_impuls = 1.0     # miedzy impulsami
hz_impuls = 2000       # czestotliwosc
t_impuls = 0.01       # czas trwania

# f tworzy impuls
def stworz_impuls(freq, duration, rate):
    t = np.linspace(0, duration, int(rate * duration), False)
    impuls = 0.5 * np.sin(2 * np.pi * freq * t)
    return impuls

impuls = stworz_impuls(hz_impuls, t_impuls, probka)

# sygnal z wieloma impulsami
sygnal = np.zeros(probki)
len_impuls = len(impuls)

for i in range(n_impuls):
    indeks = int(i * odstep_impuls * probka)
    if indeks + len_impuls < probki:
        sygnal[indeks:indeks + len_impuls] += impuls

# f oblicza odleglosc
def odleglosc(p1, p2):
    return np.sqrt(sum((np.array(p1) - np.array(p2))**2))

# f opoznia sygnal
def opoznij(sygnal, opoznienie_s):
    opoznienie_probka = int(opoznienie_s * probka)
    nowy = np.concatenate((np.zeros(opoznienie_probka), sygnal))
    return nowy[:len(sygnal)]

# opoznienia
t1 = odleglosc((a,b,c), hydro1) / v
t2 = odleglosc((a,b,c), hydro2) / v
t3 = odleglosc((a,b,c), hydro3) / v

print(f"opoznienia: t1={t1:.5f}s, t2={t2:.5f}s, t3={t3:.5f}s")

dzwiek1 = opoznij(sygnal, t1)
dzwiek2 = opoznij(sygnal, t2)
dzwiek3 = opoznij(sygnal, t3)

# pliki wav
write("hydro1.wav", probka, (dzwiek1 * 32767).astype(np.int16))
write("hydro2.wav", probka, (dzwiek2 * 32767).astype(np.int16))
write("hydro3.wav", probka, (dzwiek3 * 32767).astype(np.int16))

display(Audio("hydro1.wav"))
display(Audio("hydro2.wav"))
display(Audio("hydro3.wav"))